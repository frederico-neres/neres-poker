{"version":3,"file":"js/about.f63188cb.js","mappings":"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","sources":["webpack://neres-poker/./src/views/GameView.vue","webpack://neres-poker/./node_modules/engine.io-parser/build/esm/commons.js","webpack://neres-poker/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://neres-poker/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://neres-poker/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://neres-poker/./node_modules/engine.io-parser/build/esm/index.js","webpack://neres-poker/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/util.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/transport.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/socket.js","webpack://neres-poker/./node_modules/engine.io-client/build/esm/index.js","webpack://neres-poker/./node_modules/socket.io-client/build/esm/url.js","webpack://neres-poker/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://neres-poker/./node_modules/socket.io-parser/build/esm/binary.js","webpack://neres-poker/./node_modules/socket.io-parser/build/esm/index.js","webpack://neres-poker/./node_modules/socket.io-client/build/esm/on.js","webpack://neres-poker/./node_modules/socket.io-client/build/esm/socket.js","webpack://neres-poker/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://neres-poker/./node_modules/socket.io-client/build/esm/manager.js","webpack://neres-poker/./node_modules/socket.io-client/build/esm/index.js","webpack://neres-poker/./src/views/GameView.vue?3e8c"],"sourcesContent":["<template>\n\n    <div id=\"menu-bar\">\n        \n      <img src=\"../assets/neres_poker_logo.png\" width=\"150\">\n      <div></div>\n    </div>\n\n    <div class=\"flex-center flex-column\" id=\"main-conatiner\">\n\n        <div id=\"voting-text-info\">{{ tatalVoted }} de {{tatalPalyer}} votos</div>\n\n        <div class=\"flex-center\">\n\n            <div v-for=\"pCard in playersCards\" class=\"card-player flex-center flex-column\">\n                <div :class=\"'flex-center pick-card  ' + getCardCssClassByStep(pCard['step'])\"> {{ isRevealed? pCard[\"vote\"] : \"\" }}</div>\n                {{ pCard[\"name\"] }}\n            </div>\n\n        </div>\n        \n        <button v-if=\"!isRevealed\" class=\"poker-button poker-button-primary\" @click=\"onClickCardReveal\">Revelar Cartas</button>\n        <button v-if=\"isRevealed\" class=\"poker-button poker-button-secundary\" @click=\"onClickRestartGame\">Nova Votação</button>\n\n    </div>\n\n    <div id=\"choose-card-conatiner\">\n        <div  v-if=\"!isRevealed\" class=\"flex-center choose-card-height\" >\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('0', 'choose-card-0')\" id=\"choose-card-0\">0</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('1', 'choose-card-1')\" id=\"choose-card-1\">1</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('2', 'choose-card-2')\" id=\"choose-card-2\">2</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('3', 'choose-card-3')\" id=\"choose-card-3\">3</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('5', 'choose-card-5')\" id=\"choose-card-5\">5</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('8', 'choose-card-8')\" id=\"choose-card-8\">8</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('13', 'choose-card-13')\" id=\"choose-card-13\">13</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('21', 'choose-card-21')\" id=\"choose-card-21\">21</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('34', 'choose-card-34')\" id=\"choose-card-34\">34</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('55', 'choose-card-55')\" id=\"choose-card-55\">55</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('89', 'choose-card-89')\" id=\"choose-card-89\">89</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('?', 'choose-card-interrogation')\" id=\"choose-card-interrogation\">?</div>\n            <div class=\"flex-center choose-card\" @click=\"onClickChooseCard('☕', 'choose-card-coffee')\" id=\"choose-card-coffee\">☕</div>\n        </div>\n\n        <div v-if=\"isRevealed\" class=\"flex-center choose-card-height\">\n\n            <div v-for=\"vCard in votedCardsInfo\" class=\"vote-card-info flex-center flex-column\">\n                <div class=\"flex-center voted-card\">{{ vCard[\"number\"] }}</div>\n                {{ vCard[\"quantityLabel\"] }}\n            </div>\n\n            <div class=\"vote-card-info flex-center flex-column\" style=\"flex-direction: column-reverse;margin-left: 50px;\">\n                <div class=\"flex-center voted-card\" style=\"width: 150px;\">{{ this.average }}</div>\n                Média\n            </div>\n        \n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { io } from \"socket.io-client\";\n\n    export default {\n\n        data() {\n            return {\n                namePalyer: \"\",\n                idPalyer: \"\",\n                socketInstance: null,\n                playersCards: [],\n                isRevealed: false,\n                average: 0,\n                votedCardsInfo: [],\n                tatalVoted: 0,\n                tatalPalyer: 0\n            }\n        },\n\n        created() {\n            if(sessionStorage.getItem(this.$route.params.idgame)) {\n                let playerJson = sessionStorage.getItem(this.$route.params.idgame)\n                let playerObj = JSON.parse(playerJson)\n                this.namePalyer = playerObj[\"name\"]\n\n\n                var socket = io(window.location.origin);\n                this.socketInstance = socket\n\n                socket.on(\"newGameId\", (id) => {\n                    this.idPalyer = id\n                    socket.emit(\"inPlayer\", {name: this.namePalyer, idPalyer: id, idRoom: this.$route.params.idgame})            \n                });\n\n                socket.on(\"playersUpdate\", (playersUpdate) => {\n                    this.playersCards = playersUpdate[\"cardsOfRoom\"]\n                    this.isRevealed = playersUpdate[\"isRevealed\"]\n                    this.average = playersUpdate[\"average\"]\n                    this.votedCardsInfo = playersUpdate[\"votedCardsInfo\"]\n\n                    let votedCards = this.playersCards.filter(e=>e.step == \"voted\" || e.step == \"revealed\")\n                    this.tatalVoted = votedCards.length\n                    this.tatalPalyer = this.playersCards.length\n                });\n\n                socket.on(\"nonExistentRoom\", (id_room) => {\n                    this.$router.push(`/`)\n                });\n                \n                \n            } else {\n                this.$router.push(`/${this.$route.params.idgame}`)\n            }\n        },\n\n        methods: {\n\n            onClickCardReveal() {\n                this.socketInstance.emit(\"cardReveal\", {idRoom: this.$route.params.idgame})\n            },\n\n            onClickRestartGame() {\n                this.socketInstance.emit(\"restartGame\", {idRoom: this.$route.params.idgame})\n            },\n\n            onClickChooseCard(voteValue, cardId) {\n                Array.from(document.getElementsByClassName(\"choose-card-selected\")).forEach(e=>{\n                    e.classList.add(\"choose-card\");\n                    e.classList.remove(\"choose-card-selected\");\n                }) \n                document.getElementById(cardId).classList.remove(\"choose-card\");\n                document.getElementById(cardId).classList.add(\"choose-card-selected\");\n\n                this.socketInstance.emit(\"voting\", {vote: voteValue, idPalyer: this.idPalyer, idRoom: this.$route.params.idgame})\n            },\n            \n            getCardCssClassByStep(step) {\n\n                let steps = {\n                    no_voted: \"card-not-selected\",\n                    voted: \"card-selected\",\n                    revealed: \"card-reveal\"\n                }\n\n                return steps[step]\n            }\n        }\n        \n    }\n\n</script>\n\n\n<style>\n\nbody{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    background-color: #f1f2f4;\n}\n\n#main-conatiner {\n    height: 90vh;\n}\n\n.flex-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.flex-column {\n    flex-direction: column;\n}\n\n#choose-card-conatiner{\n    position: absolute;\n    width: 100vw;\n    bottom: 0;\n}\n\n.choose-card-height {\n    height: 120px;\n}\n\n.choose-card {\n    height: 60px;\n    width: 40px;\n    background-color: #feffff;\n    color: #484852;\n    font-weight: 900;\n    font-size: 3ch;\n    border: #48485275 1px solid;\n    border-radius: 5px;\n    margin: 10px;\n}\n\n.choose-card:hover {\n    cursor: pointer;\n    margin-bottom: 20px;\n}\n\n.choose-card-selected {\n    cursor: pointer;\n    margin: 10px 10px 40px 10px;\n    background-color: #484852;\n    color: white;\n    height: 60px;\n    width: 40px;\n    font-weight: 900;\n    font-size: 3ch;\n    border: #48485275 1px solid;\n    border-radius: 5px;\n}\n\n.card-player {\n    width: 100px;\n    word-break: break-word;\n    text-align: center;\n    height: 120px;\n    justify-content: start;\n}\n\n.pick-card  {\n    height: 60px;\n    width: 40px;\n    border-radius: 5px;\n    margin: 5px;\n}\n\n.pick-card.card-not-selected  {\n    background-color: #c8c9ce;\n}\n\n.pick-card.card-selected  {\n    background-color: #5a79c9;\n}\n\n.pick-card.card-reveal  {\n    background-color: #feffff;\n    color: #484852;\n    font-weight: 900;\n    font-size: 3ch;\n    border: #48485275 1px solid;\n}\n\n.poker-button {\n    font-size: 2ch;\n    font-weight: bold;\n    margin: 40px;\n    padding: 15px 40px;\n    border: none;\n    border-radius: 10px;\n}\n\n.poker-button:hover {\n    cursor: pointer;\n}\n\n.poker-button-primary {\n    background-color: #324ca0;\n    color: white;\n}\n\n.poker-button-secundary {\n    background-color: #484852;\n    color: white;\n}\n\n#voting-text-info {\n    color: #484852c4;\n    margin: 30px;\n}\n\n#menu-bar {\n    position: absolute;\n    top: 0;\n    width: 100vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: #48485275 1px solid;\n    padding: 15px 30px;\n    box-sizing: border-box;\n}\n\n#menu-bar button {\n    border-radius: 10px;\n    border: #48485275 1px solid;\n    padding: 10px 20px;\n    background-color: white;\n}\n\n#menu-bar button:hover {\n    cursor: pointer;\n}\n\n.vote-card-info {\n    width: 85px;\n    margin-bottom: 40px;\n}\n\n.voted-card {\n    height: 60px;\n    width: 40px;\n    background-color: #feffff;\n    color: #484852;\n    font-weight: 900;\n    font-size: 3ch;\n    border: #48485275 1px solid;\n    border-radius: 5px;\n    margin: 10px;\n}\n\n\n</style>\n\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { render } from \"./GameView.vue?vue&type=template&id=4d600f08\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=4d600f08&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","src","width","class","style","tatalVoted","tatalPalyer","playersCards","pCard","getCardCssClassByStep","isRevealed","onClickCardReveal","onClickRestartGame","onClickChooseCard","votedCardsInfo","vCard","average","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","alphabet","map","prev","seed","num","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","createCookieJar","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","name","poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","assign","Request","req","method","xhrStatus","pollXhr","undefined","_a","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","WT","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","isBuffered","some","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","namePalyer","idPalyer","socketInstance","created","sessionStorage","getItem","$route","params","idgame","playerJson","playerObj","origin","idRoom","playersUpdate","votedCards","filter","step","id_room","$router","methods","voteValue","cardId","from","getElementsByClassName","classList","remove","getElementById","vote","steps","no_voted","voted","revealed","__exports__","render"],"sourceRoot":""}